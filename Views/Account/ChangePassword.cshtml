@model Wanderlust.ViewModel.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-autumn text-white">
                    <h4 class="mb-0"><i class="bi bi-lock-fill me-2"></i>Change Password</h4>
                </div>
                <div class="card-body p-4">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-4">
                            <div class="form-floating">
                                @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", placeholder = "Current Password" })
                                @Html.LabelFor(m => m.CurrentPassword)
                            </div>
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-4">
                            <div class="form-floating">
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "New Password" })
                                @Html.LabelFor(m => m.NewPassword)
                            </div>
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-4">
                            <div class="form-floating">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm New Password" })
                                @Html.LabelFor(m => m.ConfirmPassword)
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2 d-md-flex">
                            <button type="submit" class="btn btn-autumn">
                                <i class="bi bi-check-circle me-2"></i>Change Password
                            </button>
                            <a href="@Url.Action("Dashboard", "Account")" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-autumn {
        background-color: #d2691e;
    }

    .btn-autumn {
        background-color: #d2691e;
        border-color: #d2691e;
        color: white;
    }

        .btn-autumn:hover {
            background-color: #b35a1a;
            border-color: #b35a1a;
            color: white;
        }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

