@model Wanderlust.Models.BLOG

@{
    ViewBag.Title = Model.title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="card shadow border-0">
        <div class="card-body p-5">
            <h1 class="card-title text-center mb-4" style="color: #d2691e;">@Model.title</h1>

            <div class="d-flex justify-content-between mb-4">
                <div>
                    <span class="text-muted">
                        <i class="bi bi-person"></i> By <strong>@Model.AUTHOR.firstName @Model.AUTHOR.lastName</strong>
                    </span>
                </div>
                <div>
                    <span class="text-muted">
                        <i class="bi bi-calendar3"></i> @Model.publication_date.ToString("MMMM dd, yyyy")
                    </span>
                </div>
            </div>

            <div class="blog-content mb-4">
                @Html.Raw(Model.content.Replace(Environment.NewLine, "<br />"))
            </div>

            <div class="d-flex justify-content-between align-items-center mt-4">
                <div>
                    @if (Session["Role"] != null && Session["Role"].ToString() == "User" && Session["UserId"] != null)
                    {
                        <!-- Like button for logged in users -->
                        <button type="button" class="btn me-2 @(ViewBag.UserLiked ? "btn-primary" : "btn-outline-primary")"
                                id="like-button" data-blog-id="@Model.blog_id">
                            <i class="bi bi-hand-thumbs-up"></i> <span id="like-count">@(Model.like_count ?? 0)</span> Likes
                        </button>
                    }
                    else
                    {
                        <!-- Read-only likes display for authors and guests -->
                        <span class="me-3">
                            <i class="bi bi-hand-thumbs-up"></i> @(Model.like_count ?? 0) Likes
                        </span>
                    }
                </div>

                <div>
                    @if (Session["Role"] != null && Session["Role"].ToString() == "Author" &&
                        Convert.ToInt32(Session["AuthorId"]) == Model.author_id)
                    {
                        <a href="@Url.Action("Edit", "Blog", new { id = Model.blog_id })" class="btn btn-outline-primary me-2">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                    }
                    <a href="@Url.Action("Index", "Blog")" class="btn btn-autumn">
                        <i class="bi bi-arrow-left"></i> Back to Blogs
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Comments Section -->
    <div class="card shadow border-0 mt-4">
        <div class="card-body p-4">
            <h4 class="mb-4" style="color: #d2691e;">Comments</h4>

            @if (Session["Role"] != null && Session["Role"].ToString() == "User" && Session["UserId"] != null)
            {
                <!-- Comment form for logged in users -->
                <div class="mb-4">
                    <div class="d-flex">
                        <textarea id="comment-content" class="form-control me-2" rows="2"
                                  placeholder="Write a comment..."></textarea>
                        <button type="button" id="post-comment-btn" class="btn btn-autumn"
                                data-blog-id="@Model.blog_id">
                            Post
                        </button>
                    </div>
                </div>
            }
            else if (Session["Role"] == null)
            {
                <!-- Message for guests -->
                <div class="alert alert-info mb-4">
                    <a href="@Url.Action("Login", "Account")" class="alert-link">Sign in</a> to post a comment.
                </div>
            }

            <!-- Comments list -->
            <div id="comments-container">
                @if (ViewBag.Comments != null && ViewBag.Comments.Count > 0)
                {
                    foreach (var comment in ViewBag.Comments)
                    {
                        <div class="comment mb-3 p-3 border-bottom">
                            <div class="d-flex justify-content-between mb-2">
                                <div>
                                    <strong>@comment.USER.firstName @comment.USER.lastName</strong>
                                </div>
                                <div class="text-muted small">
                                    @comment.date_posted.ToString("MMM dd, yyyy h:mm tt")
                                </div>
                            </div>
                            <div class="comment-content">
                                @comment.content
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-light text-center">
                        No comments.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Only run this code if user is logged in
            @if (Session["Role"] != null && Session["Role"].ToString() == "User" && Session["UserId"] != null)
            {
                <text>
                // Handle like button click
                $('#like-button').click(function () {
                    var blogId = $(this).data('blog-id');
                    toggleLike(blogId);
                });

                function toggleLike(blogId) {
                    $.ajax({
                        url: '@Url.Action("ToggleLike", "Blog")',
                        type: 'POST',
                        data: {
                            blogId: blogId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                // Update the UI based on the new state
                                $('#like-count').text(response.likes);

                                // Toggle button appearance
                                if (response.userLiked) {
                                    $('#like-button').removeClass('btn-outline-primary').addClass('btn-primary');
                                } else {
                                    $('#like-button').removeClass('btn-primary').addClass('btn-outline-primary');
                                }
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('An error occurred. Please try again.');
                        }
                    });
                }

                // Handle comment posting
                $('#post-comment-btn').click(function() {
                    var blogId = $(this).data('blog-id');
                    var commentContent = $('#comment-content').val().trim();

                    if (commentContent.length === 0) {
                        alert('Please enter a comment.');
                        return;
                    }

                    $.ajax({
                        url: '@Url.Action("AddComment", "Blog")',
                        type: 'POST',
                        data: {
                            blogId: blogId,
                            commentContent: commentContent,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                // Clear the comment input
                                $('#comment-content').val('');

                                // Add the new comment to the top of the comments list
                                var commentHtml = '<div class="comment mb-3 p-3 border-bottom">' +
                                    '<div class="d-flex justify-content-between mb-2">' +
                                    '<div><strong>' + response.userName + '</strong></div>' +
                                    '<div class="text-muted small">' + response.commentDate + '</div>' +
                                    '</div>' +
                                    '<div class="comment-content">' + response.commentContent + '</div>' +
                                    '</div>';

                                // If there are no comments, remove the "no comments" message
                                if ($('#comments-container .alert').length > 0) {
                                    $('#comments-container').empty();
                                }

                                // Add the new comment at the top
                                $('#comments-container').prepend(commentHtml);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred. Please try again.');
                        }
                    });
                });
                </text>
            }
        });
    </script>

    @Html.AntiForgeryToken()
}